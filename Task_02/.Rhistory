z*2+1000
my_
my_
my_div
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
(z,555,z)
(z+555+z)
c(z+555+z)
c(z,555,z)
z*2+100
my_sqrt<-z-1
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
C(1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
q()
library(swirl)
swirl()
file.rename("mytest.R") to ("mytest2.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1')
file.path("folder1","folder2")
?dir.create
file.path("testdir2")dir.create("testdir3")
file.path("testdir2"),dir.create("testdir3")
file.path("testdir2")<-dir.create("testdir3")
file.path("testdir2")
dir.create(file.path('testdir2','testdir3')
dir.create(file.path('testdir2', 'testdir3')
dir.create(file.path('testdir2', 'testdir3')
TRUE
dir.create(file.path('testdir2', 'testdir3'), recursive=TRUE)
setwd("testdir")
setwd(old.dir)
1:20
pi:10
15:1
':"
':'
?':'
stop
?':'
1:20
seq(1:20)
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(o,1,2),times=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2), each=10)
c(44,NA,5,NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
--my_data<-sample(c(y,z),100)
my_data<-sample(c(y,z),100)
is.na(my_data)
my_data<-is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==is.na()
my_data==is.na(my_data)
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(3,5,7)
x[c(3,5,7)]
x(i.e. x[0])
x(i.e.x[0])
(i.e.x[0])
(i.e.x[0])?
x(i.e.x[0])?
x(i.e.x[0])?
stop
x(i.e.x[0])?
x (i.e.x[0])?
x (i.e.x[0])?
stop
x (i.e.x[0])?
(i.e. x[0])?
x(i.e. x[0])?
x(i.e.x[0])?
1-40
x
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(foo,bar, norf)
vect
names(vect)
c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo", "bar", "norf")
identical("vect", "vect2")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector(1:20)
my_vector<-(1:20)
my_vector<-c(1:20)
my_vector<-c(1-20)
my_vector
my_vector<-(1:20)
my_vector<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)
names(my_vector<-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20))
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
length(my_vector)<-c(4,5)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?my_matrix
my_matrix?
matrix?
stop
?matrix
matrix(nrow=4,ncol=5)
matrix(1:20,nrow=4,ncol=5)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-("Bill", "Gina","Kelly", "Sean")
patients<-(Bill,Gina,Kelly,Sean)
patients<-("Bill","Gina","Kelly","Sean")
pateients
patients
patients<-vect("Bill","Gina","Kelly","Sean")
vect<-("Bill","Gina","Kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!5==7
FASLE&FALSE
FASLE & FALSE
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE| c(TRUE,FALSE,FALSE)
TRUE|| c(TRUE,FALSE,FALSE)
5>8 ||6!=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
inta
ints
ints>5
which(<7)
<7
which(ints<7)
which('ints<7')
which('ints>7')
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean()<-c(2,4,5)
mean<-c(2,4,5)
mean(c(2,4,5))
boring_function<-function(x)
stop
boring_function<-function(x) {x}
submit(borning_function)
submit()
boring_function<-function(x)
submit()
boring_function<-function(x)
submit()
submit()
submit()
boring_function('My first function!')
boring_function
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
my_mean(vector(c(4,5,10))
c(4,5,10)
my_mean(c(4,5,10))
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(vector(c(1.4,3.6,7.9,8.8)))
evaluate((c(1.4,3.6,7.9,8.8))
std(c(1.4,3.6,7.9,8.8))
c(1.4,3.6,7.9,8.8)
sd(c(1.4,3.6,7.9,8.8))
sd(1.4,3.6,7.9,8.8)
sd(c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x)+{x+[1]},c(8,4,0))
evaluate(function(x)+{x[1]},c(8,4,0))
evaluate(function(x)+{x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
v
paste("Programming", "is", "fun!")
submit()
telegram()
submit()
mad_libs(adjective="", place="", noun="")
submit()
"'I'"%p% 'love' %p% 'R!'"
"'I'" %p% 'love' %p% 'R!'"
"'I'" %p% 'love' %p% 'R!'"
r
stop
stop
"'I'" %p% 'love' %p% 'R!'"
stop
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I'%p%'love'%p%'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I' %p% 'love' %p% 'R!'"
info()
"'I' %p% 'love' %p% 'R!'"
"'I'%p%'love'%p%'R!'"
"'I' %p% 'love' %p% 'R!'"
"'I', %p% 'love', %p% 'R!'"
paste("'I', %p% 'love', %p% 'R!'")
'I', %p% 'love', %p% 'R!'
"'I', %p% 'love', %p% 'R!'"
"'I'%p%'love'%p%'R!'"
'I'%p%'love'%p%'R!'
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x,y)
plot
plot(x=cars$speed,y=cars$dist)
plot(x,y)
ploty
plot
plot(x=cars$dist,y=cars$speed)
plot(x="Speed")
speed
plot
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot
plot(cars,main="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlab=c(10,15))
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
mtcars
data(mtcars)
boxplot()
?boxplot()
?boxplot
boxplot(formula=mpg`cyl)
boxplot
boxplot(formula=mpg`cyl)
boxplot(formula=mpg`cyl=mtcars)
stop
boxplot(formula=mpg`cyl=mtcars)
boxplot(formula = mpg`cyl = mtcars)
stop
boxplot(formula = mpg~cyl = mtcars)
boxplot(formula = mpg~cyl, data = mtcars)
hist(mtcars$mpg)
q()
swirl()
library(swirl)
swirl()
swirl()
q()
setwd('')
setwd(' ')
beren3<-beren2[order(beren2$age),]
beren2<-Data1
load("C:/Users/Jimmy/Desktop/Evolution/Tasks/Task_02/.RData")
beren2<-Data1
beren3<-beren2[order(beren2$age),]
dayID<-apply(Data1,1,function(x) paste(x[1:3],collapse='-'))
dateID<-sapply(dayID, as.Date, format="%Y-%m-%d", origin="2019-04-18")
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
write.csv(beren3, 'beren_new.csv',quote=F,row.names=FALSE)
Feeds<-which(beren3$event =="bottle")
avgMilk<-mean(beren3$value[Feeds])
avgFeed<-tapply(beren3$value[Feeds],beren3$age[Feeds],mean)
varFeed<-tapply(beren3$value[Feeds], beren3$age[Feeds],var)
totalFeed<-tapply(beren3$value[Feeds],beren3$age[Feeds],sum)
numFeeds<-tapply(beren3$value[Feeds],beren3$age[Feeds],length)
cor(beren3$value[Feeds],beren3$age[Feeds])
cor.test(beren3$value[Feeds],beren3$age[Feeds])
berenCor<-cor.test(beren3$value[Feeds],beren3$age[Feeds])
summary(berenCor)
berenANOVA<-aov(beren3$value[Feeds]~beren3$caregiver[Feeds])
boxplot( beren3$value[Feeds]~beren3$caregiver[Feeds], xlab="who gave the bottle", ylab= "amount of milk consumed (oz)")
boxplot(beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab="who gave the bottle", ylab= "amount of milk consumed (oz)")
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalFeed)),totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
pdf(''r02b-totalMilkByDay.pdf'',height=4,width=4)
pdf(''r02b-totalMilkByDay.pdf'',height=4,width=4)
pdf("r02b-totalMilkByDay.pdf",height=4,width=4)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0),tck=-0.01)
source("C:/Users/Jimmy/Desktop/Evolution/Tasks/Task_02/Cody Walker Task 02 upload a.R", echo=TRUE)
abline(h=mean(totalFeed), lty=2, col='red')
plot(as.numeric(names(totalFeed)),totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
source("http://jonsmitchell.com/code/plotFxn02b.R")
cyrus<-Data2
Mass<-which(Data1[,9]=='trait_mass')
cyrus<-Data2
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
berenMass<-Data1[Mass,]
head<-(berenMass)
Mass<-which(Data1$event=='trait_mass')
dayID<-apply(Data1,1,function(x) paste(x[1:3],collaple='-'))
dateID<-sapply(dayID, as.Date, format="%Y-%m-%d", origin="2019-04-18")
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
Data1$age<-dateID-dateID[which(Data1$event =='birth')]
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
source("http://jonsmitchell.com/code/plotFxn02b.R")
head(Data2)
cyrus<-Data2
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head<-(berenMass)
Mass<-which(Data1$event=='trait_mass')
dayID<-apply(Data1,1,function(x) paste(x[1:3],collaple='-'))
dateID<-sapply(dayID, as.Date, format="%Y-%m-%d", origin="2019-04-18")
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
source("http://jonsmitchell.com/code/plotFxn02b.R")
plot(data1$age,data1$mass)
plot(data2$age,data1$mass)
plot(Data1$age,Data1$mass)
Mass<-which(Data1[,9]=='trait_mass')
berenMass<-Data1[Mass,]
head<-(berenMass)
Mass<-which(Data1$event=='trait_mass')
Mass<-which(Data1[,9]=='trait_mass')
berenMilk<-Data1[Mass,]
head(berenMilk)
Mass<-which(Data1[,'event']=='trait_mass')
Mass<-which(Data1$event =='trait_mass')
dayID<-apply(Data1,1, function(x) paste(x[1:3], collapse='-'))
dateID<-sapply(dayID, as.Date, format="%Y-%m-%d", origin="2019-04-18")
Data1$age<-dateID-dateID[which(Data1$event=='birth')]
head(Data1)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
Mass<-which(beren3$event=="trait_mass")
avgMass<-tapply(beren3$value[Mass], beren3$age[Mass],mean)
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$caregiver[Mass])
boxplot(beren3$value[Mass]~beren3$caregiver[Mass], xlab="age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age (days)",ylab="mass (kg)")
cMass<-which(Data2$event=='trait_mass')
cMass<-which(Data2[,9]=='trait_mass')
dayID<-apply(Data2,1, function(x) paste(x[1:3], collapse='-'))
dateID<-sapply(dayID, as.Date, format="%Y-%m-%d", origin="2022-04-12")
Data2$age<-dateID-dateID[which(Data2$event=='birth')]
cMass<-which(cyrus3$event=="trait_mass")
cyrus2<-Data2
cyrus3<-cyrus2[order(cyrus2$age),]
cMass<-which(cyrus3$event=="trait_mass")
avgcMass<-tapply(cyrus3$value[cMass], cyrus3$age[cMass],mean)
varcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],var)
totalcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],sum)
numcMass<-tapply(cyrus3$value[cMass],cyrus3$age[cMass],length)
cor(cyrus3$value[cMass],cyrus3$age[cMass])
cor.test(cyrus3$value[cMass],cyrus3$age[cMass])
cyrusCor<-cor.test(cyrus3$value[cMass],cyrus3$age[cMass])
boxplot(cyrus3$value[cMass]/1000~cyrus3$caregiver[cMass], xlab="age (days)",ylab="mass (g)")
cyrusANOVA<-aov(cyrus3$value[cMass]~cyrus3$age[cMass])
boxplot(cyrus3$value[cMass]/1000~cyrus3$caregiver[cMass], xlab="age (days)",ylab="mass (g)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age (days)",ylab="mass (g)")
head(Data1)
beren2<-Data1
beren3<-beren2[order(beren2$age),]
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
Mass<-which(beren3$event=="trait_mass")
avgMilk<-mean(beren3$value[Mass])
avgMass<-tapply(beren3$value[Mass], beren3$age[Mass],mean)
varMass<-tapply(beren3$value[Mass],beren3$age[Mass],var)
totalMass<-tapply(beren3$value[Mass],beren3$age[Mass],sum)
numMass<-tapply(beren3$value[Mass],beren3$age[Mass],length)
cor(beren3$value[Mass],beren3$age[Mass])
cor.test(beren3$value[Mass],beren3$age[Mass])
berenCor<-cor.test(beren3$value[Mass],beren3$age[Mass])
summary(berenCor)
berenANOVA<-aov(beren3$value[Mass]~beren3$caregiver[Mass])
boxplot(beren3$value[Mass]~beren3$caregiver[Mass], xlab="age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,col="green",xlab="age (days)",ylab="mass (kg)")
boxplot(beren3$value[Mass]~beren3$caregiver[Mass],col="lightblue",xlab="age (days)",ylab="mass (kg)")
boxplot(beren3$value[Mass]~beren3$caregiver[Mass],col="lightblue",xlab="age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,col="green",xlab="age (days)",ylab="mass (kg)")
boxplot(beren3$value[Mass]~beren3$caregiver[Mass],col="lightblue",xlab="age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="b",pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,col="green",xlab="age (days)",ylab="mass (kg)")
boxplot(beren3$value[Mass]~beren3$caregiver[Mass],col="lightblue",xlab="age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,col="green",xlab="age (days)",ylab="mass (kg)")
title("Cyrus and Beren Age vs Mass")
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=(0,20),pch=16,xlab="age (days)",ylab="mass (kg)")
berenANOVA<-aov(beren3$value[Mass]~beren3$caregiver[Mass])
boxplot(beren3$value[Mass]~beren3$caregiver[Mass],col="lightblue",xlab="age (days)",ylab="mass (kg)")
par(las=1,mar=c(5,5,1,1),mgp=c(2,0.5,0),tck=-0.01)
plot(as.numeric(names(totalMass)),totalMass,type="p",ylim=c(0,20),pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,col="green",xlab="age (days)",ylab="mass (kg)")
title("Cyrus and Beren Age vs Mass")
plot(as.numeric(names(totalMass)),totalMass,col="blue",type="p",ylim=c(0,20),pch=16,xlab="age (days)",ylab="mass (kg)")
points(cyrus3$value[cMass]/1000~cyrus3$age[cMass],type="p",pch=16,col="green",xlab="age (days)",ylab="mass (kg)")
title("Cyrus and Beren Age vs Mass")
legend(1000,5,legend=c("Beren", "Cyurs"),col=c"blue", "green"),lty=1:1,cex=0.8,title="Kids",text.font=4,bg="yellow")
legend(1000,5,legend=c("Beren", "Cyrus"),col=c9=("blue","green"),lty=1:1,cex=0.8,title="Kids",text.font=4,bg="yellow")
legend(1000,5,legend=c("Beren", "Cyrus"),col=c("blue","green"),lty=1:1,cex=0.8,title="Kids",text.font=4,bg="yellow")
