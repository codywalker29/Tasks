scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="
bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
))
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="
bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="
bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names=ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if (length(dups_lobster[i])>1){
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[! indNames(lobster_gen) %in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.25)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean, na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="
bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="
bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names=ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if (length(dups_lobster[i])>1){
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[! indNames(lobster_gen) %in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.25)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean, na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fil=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(reshape2)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster<-read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide<-reshape(lobster,idvar=c("ID","Site"),timevar="Locus",direction="wide",sep="")
colnames(lobster_wide)<-gsub("Genotype","",colnames(lobster_wide))
snpgeno<-lobster_wide[,3:ncol(lobster_wide)]
snps_to_remove<-c("25580","32362","41521","53889","65376","8953","21197","15531","22740","28357","33066","51507","53052","53263","21880","22323","22365")
snpgeno<-snpgeno[,!colnames(snpgeno)%in%snps_to_remove]
ind<-as.character(lobster_wide$ID)
site<-as.character(lobster_wide$Site)
lobster_gen<-df2genind(snpgeno,ploidy=2,ind.names=ind,pop=site,sep="")
lobster_gen<-missingno(lobster_gen,type="geno",cutoff=0.20)
mlg(lobster_gen)
dups_lobster<-mlg.id(lobster_gen)
lob_dups<-c()
x<-1
for(i in dups_lobster){
if (length(dups_lobster[i])>1){
x<-x+1
}
}
lob_Nodups<-indNames(lobster_gen)[! indNames(lobster_gen) %in%lob_dups]
lobster_gen<-lobster_gen[lob_Nodups,]
summary(lobster_gen$pop)
basic_lobster<-basic.stats(lobster_gen,diploid=TRUE)
Ho_lobster<-round(apply(basic_lobster$Ho,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
He_lobster<-round(apply(basic_lobster$Hs,MARGIN=2,FUN=mean,na.rm=TRUE),digits=3)
par(mar=c(4,4,1,1),las=1,mgp=c(2,0.25,0),tck=-0.005,cex.lab=1.25)
plot(He_lobster,Ho_lobster,xlab="expected H",ylab="observed H",pch=21,bg="gray",xlim=c(0.32,0.405),ylim=c(0.32,0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster),lty=2,lwd=1.25,col='red')
Fis<-apply(basic_lobster$Fis,MARGIN=2,FUN=mean, na.rm=TRUE)
lobster_gen_sub<-popsub(lobster_gen,sublist=c("Ale","Ber","Brd","Pad","Sar17","Vig"))
lobster_fst<-genet.dist(lobster_gen_sub,method="WC84")%>%round(digits=3)
lab_order<-c("Ber","Brd","Pad","Vig","Sar17","Ale")
fst.mat<-as.matrix(lobster_fst)
fst.mat1<-fst.mat[lab_order,]
fst.mat2<-fst.mat1[,lab_order]
ind<-which(upper.tri(fst.mat2),arr.ind=TRUE)
fst.df<-data.frame(Site1=dimnames(fst.mat2)[[2]][ind[,2]],
Site2=dimnames(fst.mat2)[[1]][ind[,1]],
Fst=fst.mat2[ind])
fst.df$Site1<-factor(fst.df$Site1,levels=unique(fst.df$Site1))
fst.df$Site2<-factor(fst.df$Site2,levels=unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst<0]<-0
fst.label<-expression(italic("F")[ST])
mid<-max(fst.df$Fst)/2
ggplot(data=fst.df,aes(x=Site1,y=Site2,fill=Fst))+
geom_tile(colour="black")+
geom_text(aes(label=Fst),color="black",size=3)+
scale_fill_gradient2(low="blue",mid="pink",high="red",
midpoint=mid,name=fst.label,limits=c(0,max(fst.df$Fst)),
breaks=c(0,0.05,0.10,0.15))+
scale_x_discrete(expand=c(0,0))+
scale_y_discrete(expand=c(0,0),position="right")+
theme(axis.text=element_text(colour="black",size=10,face="bold"),
axis.title=element_blank(),
panel.grid=element_blank(),
panel.background=element_blank(),
legend.position="right",
legend.title=element_text(size=14,face="bold"),
legend.text=element_text(size=10)
)
install.packages("learnPopGen")
coalescent.plot()
library(learnPopGen)
coalescent.plot()
install.packages("phylotools")
install.packages(ape libraries)
setwd(C:\Users\Jimmy\Desktop\Evolution\Tasks\Task_07)
setwd'(C:\\Users\\Jimmy\\Desktop\\Evolution\\Tasks\\Task_07)'
install.packages(ape libraries)
library(phytools)
library(ape libraries)
install.packages(apelibraries)
library(phytools)
library(aprlibraries)
library(apelibraries)
fossilNodes<-c()
library(phytools)
library(ape)
setwd('C:\\Users\\Jimmy\\Desktop\\Evolution\\Tasks\\Task_07')
text.string<-
"(((((((cow,pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,edge.width=2)
nodelabels(frame="circle",bg='white',cex=1)
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree,offset=1)
tiplabels(frame="circle",bg='lightblue',cex=1)
nodelabels(frame="circle",bg='white',cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length,col='black',border='white',main="",xlab="edge lengths for the Anolis tree",ylim=c(0,50),xlim=c(0,6))
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths<-AnolisTree$edge.length
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree,cex=0.25)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
?plot.phylo
plot(AnolisTree,type="phylogram",use.edge.length=TRUE,node.pos=NULL,show.tip.label=FALSE,show.node.label=TRUE,
edge.width=NULL,edge.lty=NULL,node.color=NULL,node.width=NULL,node.lty=NULL,font=3,cex=par("cex"),
adj=0.5,srt=0,no.margin=TRUE,root.edge=FALSE,label.offset=1,underscore=FALSE,x.lim=NULL,
y.lim=NULL,direction="rightwards",lab4ut=NULL,tip.color="black",plot=TRUE,rotate.tree=0,
open.angle=0,node.depth=1,align.tip.label=FALSE)
plot(AnolisTree,type="fan",use.edge.length=TRUE,node.pos=NULL,show.tip.label=FALSE,show.node.label=TRUE,
edge.width=NULL,edge.lty=NULL,node.color=NULL,node.width=NULL,node.lty=NULL,font=3,cex=par("cex"),
adj=0.5,srt=0,no.margin=TRUE,root.edge=FALSE,label.offset=1,underscore=FALSE,x.lim=NULL,
y.lim=NULL,direction="rightwards",lab4ut=NULL,tip.color="black",plot=TRUE,rotate.tree=0,
open.angle=0,node.depth=1,align.tip.label=FALSE)
plot(AnolisTree,type="fan",tip.color="red",cex=0.25)
?which
which(AnolisTree=='minedge.length')
which.min(AnolisTree$edge.length)
NewAnolisTree<-drop.tip(AnolisTree,82)
plot(NewAnolisTree,cex=0.25)
ltt(AnolisTree)
abline(0,1,lwd=2,col='red',lty=2)
?fit.bd
fit.bd(AnolisTree,b=NULL,d=NULL,rho=0.2)
plot(tree,type="fan")
data<-read.csv("https://jonsmitchell.com/data/svl.csv",stringsAsFactors=F,row.names=1)
svl<-setNames(data$svl,rownames(data))
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE,CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan",lwd=2,show.tip.label=F)
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])
nodelabels(pch=16,cex=0.25*Ancestors$ace)
obj<-contMap(AnolisTree,svl,plot=F)
plot(obj,type="fan",legend=0.7*max(nodeHeights(AnolisTree)),sig=2,fsize=c(0.7,0.9))
fossilData<-data.frame(svl=log(c(25.4,23.2,17.7,19.7,24,31)),tip1=c(
"Anolis_aliniger","Anolis_aliniger","Anolis_occultus","Anolis_ricordii
","Anolis_cristatellus","Anolis_occultus"),tip2=c("Anolis_chlorocyanus
","Anolis_coelestinus","Anolis_hendersoni","Anolis_cybotes","Anolis_
angusticeps","Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
library(phytools)
library(ape)
setwd('C:\\Users\\Jimmy\\Desktop\\Evolution\\Tasks\\Task_07')
text.string<-
"(((((((cow,pig),whale),(bat,(lemur,human))),(robin,iguana)),coelacanth
),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
plot(vert.tree,edge.width=2)
nodelabels(frame="circle",bg='white',cex=1)
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree,offset=1)
tiplabels(frame="circle",bg='lightblue',cex=1)
nodelabels(frame="circle",bg='white',cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length,col='black',border='white',main="",xlab="edge lengths for the Anolis tree",ylim=c(0,50),xlim=c(0,6))
tipEdges<-which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths<-AnolisTree$edge.length
names(Lengths)<-AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree,cex=0.25)
Labs<-sapply(AnolisTree$edge.length,round,digits=2)
edgelabels(text=Labs,cex=0.25)
?plot.phylo
plot(AnolisTree,type="phylogram",use.edge.length=TRUE,node.pos=NULL,show.tip.label=FALSE,show.node.label=TRUE,
edge.width=NULL,edge.lty=NULL,node.color=NULL,node.width=NULL,node.lty=NULL,font=3,cex=par("cex"),
adj=0.5,srt=0,no.margin=TRUE,root.edge=FALSE,label.offset=1,underscore=FALSE,x.lim=NULL,
y.lim=NULL,direction="rightwards",lab4ut=NULL,tip.color="black",plot=TRUE,rotate.tree=0,
open.angle=0,node.depth=1,align.tip.label=FALSE)
plot(AnolisTree,type="fan",use.edge.length=TRUE,node.pos=NULL,show.tip.label=FALSE,show.node.label=TRUE,
edge.width=NULL,edge.lty=NULL,node.color=NULL,node.width=NULL,node.lty=NULL,font=3,cex=par("cex"),
adj=0.5,srt=0,no.margin=TRUE,root.edge=FALSE,label.offset=1,underscore=FALSE,x.lim=NULL,
y.lim=NULL,direction="rightwards",lab4ut=NULL,tip.color="black",plot=TRUE,rotate.tree=0,
open.angle=0,node.depth=1,align.tip.label=FALSE)
plot(AnolisTree,type="fan",tip.color="red",cex=0.25)
?which
which(AnolisTree=='minedge.length')
which.min(AnolisTree$edge.length)
NewAnolisTree<-drop.tip(AnolisTree,82)
plot(NewAnolisTree,cex=0.25)
ltt(AnolisTree)
abline(0,1,lwd=2,col='red',lty=2)
?fit.bd
fit.bd(AnolisTree,b=NULL,d=NULL,rho=0.2)
plot(tree,type="fan")
data<-read.csv("https://jonsmitchell.com/data/svl.csv",stringsAsFactors=F,row.names=1)
svl<-setNames(data$svl,rownames(data))
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE,CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan",lwd=2,show.tip.label=F)
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])
nodelabels(pch=16,cex=0.25*Ancestors$ace)
obj<-contMap(AnolisTree,svl,plot=F)
plot(obj,type="phylogram",legend=0.7*max(nodeHeights(AnolisTree)),sig=2,fsize=c(0.7,0.9))
fossilData<-data.frame(svl=log(c(25.4,23.2,17.7,19.7,24,31)),tip1=c(
"Anolis_aliniger","Anolis_aliniger","Anolis_occultus","Anolis_ricordii
","Anolis_cristatellus","Anolis_occultus"),tip2=c("Anolis_chlorocyanus
","Anolis_coelestinus","Anolis_hendersoni","Anolis_cybotes","Anolis_
angusticeps","Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in 1:nrow(fossilData)) {
Node<-fastMRCA(AnolisTree,fossilData[i,"tip1"],fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i,"svl"]
nodeN[i]<-Node
names(fossilNodes)<-nodeN
}
